void getContours(Mat imgDil, Mat img) {

	vector<vector<Point>> contours;
	vector<Vec4i> hierachy;
	
	findContours(imgDil, contours, hierachy, RETR_EXTERNAL, CHAIN_APPROX_TC89_KCOS);
	//filter
	
		vector<vector<Point>> conPoly(contours.size());
		vector<Rect> boundRect(contours.size());
	
	for (int i = 0; i < contours.size(); i++) {

	

		int area = contourArea(contours[i]);
		//cout << area << endl;
		if (area > 500) {
			float peri = arcLength(contours[i], true);
			approxPolyDP(contours[i], conPoly[i], 0.02 * peri, true);
			drawContours(img, conPoly, i, Scalar(0, 255, 255), 2);
			cout << conPoly[i].size() << endl;
			boundRect[i] = boundingRect(conPoly[i]);
			rectangle(img, boundRect[i].tl(), boundRect[i].br(), Scalar(0, 255, 0), 5);
		}
	}
	

}
